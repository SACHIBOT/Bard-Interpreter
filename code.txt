swift
func floydsTriangle(numberOfRows: Int) -> [[Int]] {
  var triangle = [[Int]]()
  for row in 0 ..< numberOfRows {
    var currentRow = [Int]()
    for column in 0 ..< row + 1 {
      if column == 0 || column == row {
        currentRow.append(1)
      } else {
        currentRow.append(triangle[row - 1][column - 1] + triangle[row - 1][column])
      }
    }
    triangle.append(currentRow)
  }
  return triangle
}
```

This code works by first creating an empty array to store the triangle. Then, it loops over the number of rows specified by the user. For each row, it creates a new array to store the numbers in that row. The numbers in each row are calculated by adding the numbers in the previous row. Once all of the rows have been created, the triangle is returned.

Here is an example of how to use the code:

```swift
let triangle = floydsTriangle(numberOfRows: 5)

for row in triangle {
  print(row)
}
```

This code will print the following output:

```
[1]
[1, 1]
[1, 2, 1]
[1, 3, 3, 1]
[1, 4, 6, 4, 1]
